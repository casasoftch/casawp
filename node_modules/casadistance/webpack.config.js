/**
 *  webpack.config.js  (development / npm start)
 *  ────────────────────────────────────────────
 *  • Compiles SCSS with   style-loader → css-loader → sass-loader
 *  • Inlines SVG / images with base64-inline-loader
 *  • Keeps HMR and all existing dev-server features
 *  • No ExtractTextPlugin here – that is only for the prod build
 */

const { resolve }   = require('path');
const webpack       = require('webpack');
const HtmlPlugin    = require('html-webpack-plugin');
const ManifestPlugin= require('webpack-manifest-plugin');
const WebpackMd5    = require('webpack-md5-hash');
const OpenBrowser   = require('open-browser-webpack-plugin');

module.exports = {
  devtool: 'cheap-module-eval-source-map',

  entry: [
	'babel-polyfill',
	'webpack-dev-server/client?http://localhost:9090',
	'webpack/hot/only-dev-server',
	'./src/scripts/main.js',
  ],

  output: {
	path: resolve(__dirname, 'dist'),
	filename: '[name]-bundle.js',
	publicPath: '/',                 // ← ensures HMR URLs resolve
  },

  resolveLoader: { moduleExtensions: ['-loader'] },

  module: {
	noParse: /(mapbox-gl)\.js$/,
	rules: [
	  /* --------  SCSS  -------- */
	  {
		test: /\.scss$/,
		use: [
		  'style-loader',
		  'css-loader',
		  {
			loader: 'sass-loader',
			options: {
			  sourceMap: true,
			  includePaths: [resolve(__dirname, 'node_modules')],
			},
		  },
		],
	  },
  
	  /* --------  JavaScript  -------- */
	  {
		test: /\.js$/,
		exclude: /node_modules/,
		include: [resolve(__dirname, 'src')],
		loader: 'babel-loader',
	  },
  
	  /* --------  Images & Fonts  -------- */
	  {
		test: /\.(jpe?g|png|gif|svg|ttf|eot|woff2?)$/,
		use: 'base64-inline-loader?name=[name].[ext]',
	  },
	],
  },
  

  devServer: {
	hot: true,
	host: 'localhost',
	port: 9090,
	historyApiFallback: true,
  },

  plugins: [
	new webpack.DefinePlugin({
	  'process.env.NODE_ENV': JSON.stringify('development'),
	  'process.env.BROWSER':  JSON.stringify(true),
	}),
	new webpack.HotModuleReplacementPlugin(),
	new WebpackMd5(),
	new ManifestPlugin(),
	new HtmlPlugin({
	  template: './src/index.html',
	  filename: 'index.html',
	}),
	new OpenBrowser({ url: 'http://localhost:9090' }),
  ],
};
