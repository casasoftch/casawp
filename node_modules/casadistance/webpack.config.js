/* webpack.config.js â€” Webpack 3 + ES-aware minify, without babel-polyfill */
const { resolve }  = require('path');
const webpack      = require('webpack');
const HtmlPlugin   = require('html-webpack-plugin');
const Manifest     = require('webpack-manifest-plugin');
const WebpackMd5   = require('webpack-md5-hash');
const OpenBrowser  = require('open-browser-webpack-plugin');
const UglifyPlugin = require('uglifyjs-webpack-plugin');

const isDev = process.env.NODE_ENV !== 'production';

module.exports = {
  devtool: isDev ? 'cheap-module-eval-source-map' : false,

  entry: [
	/*  >>> removed 'babel-polyfill' <<<  */
	...(isDev ? [
	  'webpack-dev-server/client?http://localhost:9090',
	  'webpack/hot/only-dev-server',
	] : []),
	'./src/scripts/main.js',
  ],

  output: {
	path: resolve(__dirname, 'dist'),
	filename: '[name]-bundle.js',
	publicPath: '/',
  },

  resolveLoader: { moduleExtensions: ['-loader'] },

  module: {
	noParse: /(mapbox-gl)\.js$/,
	rules: [
	  {
		test: /\.scss$/,
		use: [
		  'style-loader',
		  'css-loader',
		  {
			loader: 'sass-loader',
			options: {
			  sourceMap: isDev,
			  includePaths: [resolve(__dirname, 'node_modules')],
			},
		  },
		],
	  },
	  {
		test: /\.js$/,
		exclude: /node_modules/,
		include: [resolve(__dirname, 'src')],
		loader: 'babel-loader',
	  },
	  {
		test: /\.(jpe?g|png|gif|svg|ttf|eot|woff2?)$/,
		use: 'base64-inline-loader?name=[name].[ext]',
	  },
	],
  },

  ...(isDev && {
	devServer: {
	  hot: true,
	  host: 'localhost',
	  port: 9090,
	  historyApiFallback: true,
	},
  }),

  plugins: [
	new webpack.DefinePlugin({
	  'process.env.NODE_ENV': JSON.stringify(isDev ? 'development' : 'production'),
	  'process.env.BROWSER':  JSON.stringify(true),
	}),
	...(isDev ? [new webpack.HotModuleReplacementPlugin()] : []),
	...(isDev ? [new OpenBrowser({ url: 'http://localhost:9090' })] : []),

	...(!isDev ? [new UglifyPlugin({
	  uglifyOptions: {
		ecma: 8,
		compress: { warnings: false },
		output: { comments: false },
	  },
	  sourceMap: false,
	})] : []),

	new WebpackMd5(),
	new Manifest(),
	new HtmlPlugin({
	  template: './src/index.html',
	  filename: 'index.html',
	  minify: isDev ? false : { collapseWhitespace: true, removeComments: true },
	}),
  ],
};
